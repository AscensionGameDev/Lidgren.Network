name: AscensionGameDev.Lidgren.Network

on:
  push:
    branches: [ main, test_workflow ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LIDGREN_VERSION: '1.7.3.${{ github.run_number }}'
    outputs:
      debug_nupkg: ${{ steps.build_debug.outputs.nupkg }}
      debug_snupkg: ${{ steps.build_debug.outputs.snupkg }}
      release_nupkg: ${{ steps.build_release.outputs.nupkg }}
      release_snupkg: ${{ steps.build_release.outputs.snupkg }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - id: build_debug
      name: Build (Debug)
      run: |
        dotnet build --no-restore --configuration Debug -p:VersionPrefix=$LIDGREN_VERSION --version-suffix debug
        echo "::set-output name=nupkg::bin/Debug/AscensionGameDev.Lidgren.Network.$LIDGREN_VERSION-debug.nupkg"
        echo "::set-output name=snupkg::bin/Debug/AscensionGameDev.Lidgren.Network.$LIDGREN_VERSION-debug.snupkg"
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - id: build_release
      name: Build (Release)
      run: |
        dotnet build --no-restore --configuration Release -p:VersionPrefix='1.7.3.${{ github.run_number }}'
        echo "::set-output name=nupkg::bin/Release/AscensionGameDev.Lidgren.Network.$LIDGREN_VERSION.nupkg"
        echo "::set-output name=snupkg::bin/Release/AscensionGameDev.Lidgren.Network.$LIDGREN_VERSION.snupkg"

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Publish Release
        run: dotnet nuget push ${{needs.build.outputs.release_nupkg}} -k ${{ secrets.LIDGREN_NUGET_API_KEY }}
      - name: Publish Debug
        run: dotnet nuget push ${{needs.build.outputs.debug_nupkg}} -k ${{ secrets.LIDGREN_NUGET_API_KEY }}'
